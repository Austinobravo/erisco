// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
  // provider = "postgresql"
  // url      = env("DATABASE_URL")
}

model User{
  id Int @id @default(autoincrement())
  username String 
  email String @unique
  phone BigInt 
  password String

  purchased Purchased[]
  cart Cart[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id Int @id @default(autoincrement())
  quantity Int 
  productId Int @unique
  // product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  userId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  // createdAt DateTime @default(now())
  //  updatedAt DateTime @updatedAt
}

model Product{
   id Int @id @default(autoincrement())
   title String
   image String
   previousPrice Int
   currentPrice Int
   details String
  
  //  cart Cart[]
   purchased Purchased[]
   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt
}

model Purchased{
   id Int @id @default(autoincrement())
   isPaid Boolean
   productId Int
   product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
   userId Int
   user User @relation(fields: [userId], references: [id], onDelete: Cascade)
   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt
}
